-—Block—-
func_180660_a - getItemDropped
func_180654_a - setBlockBoundsBasedOnState
func_180640_a - getCollisionBoundingBoxFromPool
func_180646_a - getSelectedBoundingBoxFromPool
func_180639_a - onBlockActivated
func_180649_a - onBlockClicked
func_176196_c - canPlaceBlockAt
func_176204_a - onNeighborBlockChange
func_180650_b - updateTick
func_180655_c - randomDisplayTick
func_180644_h - getRenderColor
func_180662_a - colorMultiplier
func_175671_l - getBlockLightValue
func_180659_g - getMapColor
func_180641_l - getComparatorInputOverride
func_176222_j - getDamageValue
func_176207_c - getMixedBrightnessForBlock
func_176225_a - shouldSideBeRendered
func_176195_g - getBlockHardness
func_176209_a - canCollideCheck
func_180638_a - addCollisionBoxesToList
func_180665_b - getItem
func_176208_a - onBlockHarvested
func_180653_a - dropBlockAsItemWithChance
func_180657_a - harvestBlock
func_180643_i - createStackedBlock
func_176213_c - onBlockAdded
func_180633_a - onBlockPlacedBy
func_180651_a - damageDropped
func_180663_b - breakBlock
func_180656_a - isProvidingWeakPower
func_180642_a - onBlockPlaced

—Item—
func_180614_a - onItemUse

—IBlockAccess—
func_180494_b - getBiomeGenForCoords
func_175625_s - getTileEntity

—World—-
func_175698_g - setBlockToAir
func_175656_a - setBlock
func_175718_b - playAuxSFX
func_180498_a - playAuxSFXAtEntity
func_175623_d - isAirBlock
func_175690_a - setTileEntity
func_175689_h - markBlockForUpdate
func_175641_c - addBlockEvent
func_180501_a - setBlock
func_175726_f - getChunkFromBlockCoords

—RegistryNamespaced—
func_177775_a - addObject

—IInventory—-
func_174889_b - openInventory
func_174886_c - closeInventory

—RenderItem—
func_180451_a - renderEffect

——————————
ESTIMATES
——————————

—IBlockAccess—
func_180495_p - getBlockState

—World—
func_175701_a - isPosInBoundaries

—Chunk—
func_177435_g - getBlockState

—Block—-
func_180661_e - createBlockState
func_176194_O - getBlockState
func_180632_j - setDefaultBlockState
func_176223_P - getDefaultBlockState
func_176203_a - getBlockStateFromMeta
func_176201_c - getMetaFromBlockState
func_176215_a - registerBlock
func_176219_a - registerBlock

field_176227_L - blockState
field_176228_M - defaultBlockState

—BlockDirt—
field_176386_a - VARIANT_PROP
field_176385_b - SNOWY_PROP

—BlockDirt.DirtType—
func_176925_a - getMetadata

field_176931_e - metadata

—IBlockState—
func_177227_a - getPropertyNames
func_177229_b - getValue
func_177226_a - setProperty
func_177228_b - getProperties

—BlockState—
func_177622_c - getBlock
func_177623_d - getProperties
func_177620_e - getAllowedValues
func_177619_a - getValidStates
func_177621_b - getBaseState

field_177627_c - block
field_177625_e - validStates

—BlockStateBase—
func_177232_a - validatePropertyValue

—BlockState.StateImplementation—
func_177230_c - getBlock

field_177239_a - block
field_177237_b - properties

—PropertyHelper—
field_177704_a - propertyClass
field_177703_b - name

—IProperty—
func_177701_a - getName
func_177700_c - getAllowedValues
func_177699_b - getPropertyClass

—TileEntity—
func_174877_v - getPos

field_174879_c - pos

—MapPopulator—
func_179400_b - populateLinkedHashMap
func_179399_a - populateLinkedHashMap

—Cartesian—

func_179319_b - createArray
func_179322_b - toArray

—Cartestian.GetList—
func_179324_a - toList

—RegistryNamespaced—
func_177774_c - getKeyForObject

—Vec3i—
func_177958_n - getX
func_177956_o - getY
func_177952_p - getZ
func_177954_c - getDistanceSq
func_177951_i - getDistanceSq

field_177962_a - x
field_177960_b - y
field_177961_c - z

—BlockPos—
field_177992_a - ORIGIN

—IStringSerializable—
func_176610_l - getID

—ModelBakery—
func_177580_d - getModelLocation
func_177584_b - getBlockStateLocation
func_177586_a - getModelBlockDefinition

——————————
FIXES
——————————
—GameData—

    static Block findBlock(String modId, String name)
    {
        ResourceLocation key = new ResourceLocation(modId + ":" + name);
        return getMain().iBlockRegistry.containsKey(key) ? getMain().iBlockRegistry.getObject(key) : null;
    }

    private int registerBlock(Block block, String name, int idHint)
    {
        // handle ItemBlock-before-Block registrations
        ItemBlock itemBlock = null;

        for (Item item : iItemRegistry.typeSafeIterable()) // find matching ItemBlock
        {
            if (item instanceof ItemBlock && ((ItemBlock) item).blockInstance == block)
            {
                itemBlock = (ItemBlock) item;
                break;
            }
        }

        if (itemBlock != null) // has ItemBlock, adjust id and clear the slot already occupied by the corresponding item
        {
            idHint = iItemRegistry.getId(itemBlock);
            FMLLog.fine("Found matching ItemBlock %s for Block %s at id %d", itemBlock, block, idHint);
            freeSlot(idHint, block); // temporarily free the slot occupied by the Item for the block registration
        }

        // add
        int blockId = iBlockRegistry.add(idHint, name, block, availabilityMap);

        if (itemBlock != null) // verify
        {
            if (blockId != idHint) throw new IllegalStateException(String.format("Block at itemblock id %d insertion failed, got id %d.", idHint, blockId));
            verifyItemBlockName(itemBlock);
        }
        
        //Hackery added by me which probably shouldn't be done
        Iterator iterator1 = block.getBlockState().getValidStates().iterator();

        while (iterator1.hasNext())
        {
            IBlockState iblockstate = (IBlockState)iterator1.next();
            int i = blockRegistry.getIDForObject(block) << 4 | block.getMetaFromBlockState(iblockstate);
           Block.field_176229_d.func_148746_a(iblockstate, i);
        }
	//End hackery

        useSlot(blockId);
        ((RegistryDelegate.Delegate<Block>) block.delegate).setName(name);
        return blockId;
    }